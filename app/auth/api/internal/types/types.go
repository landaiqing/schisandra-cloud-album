// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type AccountLoginRequest struct {
	Account   string `json:"account"`
	Password  string `json:"password"`
	AutoLogin bool   `json:"auto_login"`
	Angle     int64  `json:"angle"`
	Key       string `json:"key"`
}

type Album struct {
	ID         int64  `json:"id"`
	Name       string `json:"name"`
	CreatedAt  string `json:"created_at"`
	Type       int64  `json:"type"`
	CoverImage string `json:"cover_image"`
}

type AlbumCreateRequest struct {
	Name string `json:"name"`
}

type AlbumCreateResponse struct {
	ID int64 `json:"id"`
}

type AlbumDeleteRequest struct {
	ID int64 `json:"id"`
}

type AlbumDetailListRequest struct {
	ID       int64  `json:"id"`
	Provider string `json:"provider"`
	Bucket   string `json:"bucket"`
}

type AlbumDetailListResponse struct {
	Records []AllImageDetail `json:"records"`
}

type AlbumListRequest struct {
	Type int64 `json:"type,omitempty"`
	Sort bool  `json:"sort"`
}

type AlbumListResponse struct {
	Albums []Album `json:"albums"`
}

type AlbumRenameRequest struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}

type AlbumRenameResponse struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}

type AllImageDetail struct {
	Date string      `json:"date"`
	List []ImageMeta `json:"list"`
}

type AllImageListRequest struct {
	Type     string `json:"type"`
	Sort     bool   `json:"sort"`
	Provider string `json:"provider"`
	Bucket   string `json:"bucket"`
}

type AllImageListResponse struct {
	Records []AllImageDetail `json:"records"`
}

type BucketCapacityRequest struct {
	Provider string `json:"provider"`
	Bucket   string `json:"bucket"`
}

type BucketCapacityResponse struct {
	Capacity   string  `json:"capacity"`
	Used       string  `json:"used"`
	Percentage float64 `json:"percentage"`
}

type CommentContent struct {
	NickName        string `json:"nickname"`
	Avatar          string `json:"avatar"`
	Level           int64  `json:"level,omitempty" default:"0"`
	Id              int64  `json:"id"`
	UserId          string `json:"user_id"`
	TopicId         string `json:"topic_id"`
	Content         string `json:"content"`
	ReplyTo         int64  `json:"reply_to,omitempty"`
	ReplyId         int64  `json:"reply_id,omitempty"`
	ReplyUser       string `json:"reply_user,omitempty"`
	ReplyNickname   string `json:"reply_nickname,omitempty"`
	IsAuthor        int64  `json:"is_author"`
	Likes           int64  `json:"likes"`
	ReplyCount      int64  `json:"reply_count"`
	CreatedTime     string `json:"created_time"`
	Location        string `json:"location"`
	Browser         string `json:"browser"`
	OperatingSystem string `json:"operating_system"`
	IsLiked         bool   `json:"is_liked" default:"false"`
	Images          string `json:"images,omitempty"`
}

type CommentDisLikeRequest struct {
	TopicId   string `json:"topic_id"`
	CommentId int64  `json:"comment_id"`
}

type CommentLikeRequest struct {
	TopicId   string `json:"topic_id"`
	CommentId int64  `json:"comment_id"`
}

type CommentListPageResponse struct {
	Size     int              `json:"size"`
	Total    int64            `json:"total"`
	Current  int              `json:"current"`
	Comments []CommentContent `json:"comments"`
}

type CommentListRequest struct {
	TopicId string `json:"topic_id"`
	Page    int    `json:"page,default=1,optional"`
	Size    int    `json:"size,default=5,optional"`
	IsHot   bool   `json:"is_hot,default=true,optional"`
}

type CommentRequest struct {
	Content string  `json:"content"`
	Images  string  `json:"images,optional"`
	TopicId string  `json:"topic_id"`
	Author  string  `json:"author"`
	Key     string  `json:"key"`
	Point   []int64 `json:"point"`
}

type CommentResponse struct {
	Id              int64  `json:"id"`
	Content         string `json:"content"`
	UserId          string `json:"user_id"`
	TopicId         string `json:"topic_id"`
	Author          int64  `json:"author"`
	Location        string `json:"location"`
	Browser         string `json:"browser"`
	OperatingSystem string `json:"operating_system"`
	CreatedTime     string `json:"created_time"`
	ReplyId         int64  `json:"reply_id,omitempty"`
	ReplyUser       string `json:"reply_user,omitempty"`
	ReplyTo         int64  `json:"reply_to,omitempty"`
}

type DeleteImageRequest struct {
	IDS      []int64 `json:"ids"`
	Provider string  `json:"provider"`
	Bucket   string  `json:"bucket"`
}

type DeleteRecordListResponse struct {
	Records []AllImageDetail `json:"records"`
}

type DownloadAlbumRequest struct {
	ID       int64  `json:"id"`
	Provider string `json:"provider"`
	Bucket   string `json:"bucket"`
}

type FaceDetailListRequest struct {
	FaceID   int64  `json:"face_id"`
	Provider string `json:"provider"`
	Bucket   string `json:"bucket"`
}

type FaceDetailListResponse struct {
	Records []AllImageDetail `json:"records"`
}

type FaceSampleLibrary struct {
	ID        int64  `json:"id"`
	FaceName  string `json:"face_name"`
	FaceImage string `json:"face_image"`
}

type FaceSampleLibraryListRequest struct {
	Type int64 `json:"type"`
}

type FaceSampleLibraryListResponse struct {
	Faces []FaceSampleLibrary `json:"faces"`
}

type ImageMeta struct {
	ID        int64   `json:"id"`
	FileName  string  `json:"file_name"`
	URL       string  `json:"url"`
	Width     float64 `json:"width"`
	Height    float64 `json:"height"`
	CreatedAt string  `json:"created_at"`
	Thumbnail string  `json:"thumbnail"`
}

type LocationDetailListRequest struct {
	ID       int64  `json:"id"`
	Provider string `json:"provider"`
	Bucket   string `json:"bucket"`
}

type LocationDetailListResponse struct {
	Records []AllImageDetail `json:"records"`
}

type LocationListData struct {
	Location string         `json:"location"` // 中国 新疆维吾尔自治区
	List     []LocationMeta `json:"list"`     // 图片列表
}

type LocationListRequest struct {
	Provider string `json:"provider"`
	Bucket   string `json:"bucket"`
}

type LocationListResponse struct {
	Records []LocationListData `json:"records"`
}

type LocationMeta struct {
	ID         int64  `json:"id"`
	City       string `json:"city"`
	Total      int64  `json:"total"`
	CoverImage string `json:"cover_image"`
}

type LoginResponse struct {
	AccessToken string `json:"access_token"`
	ExpireAt    int64  `json:"expire_at"`
	UID         string `json:"uid"`
	Username    string `json:"username,omitempty"`
	Nickname    string `json:"nickname"`
	Avatar      string `json:"avatar"`
	Status      int64  `json:"status"`
}

type ModifyFaceNameRequestAndResponse struct {
	ID       int64  `json:"id"`
	FaceName string `json:"face_name"`
}

type ModifyFaceTypeRequest struct {
	IDs      []int64 `json:"ids"`
	FaceType int64   `json:"face_type"`
}

type ModifyFaceTypeResponse struct {
	Result string `json:"result"`
}

type OAuthCallbackRequest struct {
	Code string `form:"code"`
}

type OAuthRequest struct {
	State string `form:"state"`
}

type OAuthWechatRequest struct {
	ClientId string `json:"client_id"`
}

type PhoneLoginRequest struct {
	Phone     string `json:"phone"`
	Captcha   string `json:"captcha"`
	AutoLogin bool   `json:"auto_login"`
}

type QueryDeleteRecordRequest struct {
	Provider string `json:"provider"`
	Bucket   string `json:"bucket"`
}

type QueryShareImageRequest struct {
	InviteCode     string `json:"invite_code"`
	AccessPassword string `json:"access_password,omitempty"`
}

type QueryShareImageResponse struct {
	Records []ShareImageListMeta `json:"records"`
}

type QueryShareInfoRequest struct {
	InviteCode string `json:"invite_code"`
}

type RecentListRequest struct {
	Provider string `json:"provider"`
	Bucket   string `json:"bucket"`
}

type RecentListResponse struct {
	Records []AllImageDetail `json:"records"`
}

type RefreshTokenResponse struct {
	AccessToken string `json:"access_token"`
	ExpireAt    int64  `json:"expire_at"`
}

type ReplyCommentRequest struct {
	Content   string  `json:"content"`
	Images    string  `json:"images,optional"`
	TopicId   string  `json:"topic_id" `
	ReplyId   int64   `json:"reply_id" `
	ReplyUser string  `json:"reply_user" `
	Author    string  `json:"author"`
	Key       string  `json:"key"`
	Point     []int64 `json:"point"`
}

type ReplyListRequest struct {
	TopicId   string `json:"topic_id"`
	CommentId int64  `json:"comment_id"`
	Page      int    `json:"page,default=1,optional"`
	Size      int    `json:"size,default=5,optional"`
}

type ReplyReplyRequest struct {
	Content   string  `json:"content"`
	Images    string  `json:"images,optional"`
	TopicId   string  `json:"topic_id"`
	ReplyTo   int64   `json:"reply_to"`
	ReplyId   int64   `json:"reply_id"`
	ReplyUser string  `json:"reply_user" `
	Author    string  `json:"author"`
	Key       string  `json:"key"`
	Point     []int64 `json:"point"`
}

type ResetPasswordRequest struct {
	Phone      string `json:"phone"`
	Captcha    string `json:"captcha"`
	Password   string `json:"password"`
	Repassword string `json:"repassword"`
}

type RotateCaptchaResponse struct {
	Key   string `json:"key"`
	Image string `json:"image"`
	Thumb string `json:"thumb"`
}

type ShareAlbumRequest struct {
	ID             int64  `json:"id"`
	ExpireDate     string `json:"expire_date"`
	AccessLimit    int64  `json:"access_limit,omitempty"`
	AccessPassword string `json:"access_password,omitempty"`
	Provider       string `json:"provider"`
	Bucket         string `json:"bucket"`
}

type ShareImageListMeta struct {
	ID        int64   `json:"id"`
	FileName  string  `json:"file_name"`
	URL       string  `json:"url"`
	Thumbnail string  `json:"thumbnail"`
	Width     float64 `json:"width"`
	Height    float64 `json:"height"`
	ThumbSize float64 `json:"thumb_size"`
	CreatedAt string  `json:"created_at"`
}

type ShareImageMeta struct {
	FileName    string  `json:"file_name"`
	OriginImage string  `json:"origin_image"`
	FileType    string  `json:"file_type"`
	Thumbnail   string  `json:"thumbnail"`
	ThumbW      float64 `json:"thumb_w"`
	ThumbH      float64 `json:"thumb_h"`
	ThumbSize   int64   `json:"thumb_size"`
}

type ShareImageRequest struct {
	Title          string           `json:"title,omitempty"`
	ExpireDate     string           `json:"expire_date"`
	AccessLimit    int64            `json:"access_limit,omitempty"`
	AccessPassword string           `json:"access_password,omitempty"`
	Provider       string           `json:"provider"`
	Bucket         string           `json:"bucket"`
	Images         []ShareImageMeta `json:"images"`
}

type ShareInfoResponse struct {
	ID           int64  `json:"id"`
	CoverImage   string `json:"cover_image"`
	CreatedAt    string `json:"created_at"`
	VisitLimit   int64  `json:"visit_limit"`
	ExpireTime   string `json:"expire_time"`
	ImageCount   int64  `json:"image_count"`
	VisitCount   int64  `json:"visit_count"`
	ViewerCount  int64  `json:"viewer_count"`
	SharerAvatar string `json:"sharer_avatar"`
	SharerName   string `json:"sharer_name"`
	AlbumName    string `json:"album_name"`
}

type ShareOverviewResponse struct {
	VisitCount        int64 `json:"visit_count"`
	VisitCountToday   int64 `json:"visit_count_today"`
	ViewerCount       int64 `json:"viewer_count"`
	ViewerCountToday  int64 `json:"viewer_count_today"`
	PublishCount      int64 `json:"publish_count"`
	PublishCountToday int64 `json:"publish_count_today"`
}

type ShareRecord struct {
	ID             int64  `json:"id"`
	CoverImage     string `json:"cover_image"`
	CreatedAt      string `json:"created_at"`
	InviteCode     string `json:"invite_code"`
	VisitLimit     int64  `json:"visit_limit"`
	AccessPassword string `json:"access_password"`
	ValidityPeriod int64  `json:"validity_period"`
}

type ShareRecordListRequest struct {
	DateRange []string `json:"date_range"`
}

type ShareRecordListResponse struct {
	Records []ShareRecord `json:"records"`
}

type SingleImageRequest struct {
	ID int64 `json:"id"`
}

type SlideCaptchaResponse struct {
	Key         string `json:"key"`
	Image       string `json:"image"`
	Thumb       string `json:"thumb"`
	ThumbWidth  int64  `json:"thumb_width"`
	ThumbHeight int64  `json:"thumb_height"`
	ThumbX      int64  `json:"thumb_x"`
	ThumbY      int64  `json:"thumb_y"`
}

type SmsSendRequest struct {
	Phone string `json:"phone"`
	Angle int64  `json:"angle"`
	Key   string `json:"key"`
}

type StorageConfigRequest struct {
	Type      string `json:"type"`
	AccessKey string `json:"access_key"`
	SecretKey string `json:"secret_key"`
	Endpoint  string `json:"endpoint"`
	Bucket    string `json:"bucket"`
	Region    string `json:"region"`
}

type StorageListResponse struct {
	Records []StroageNode `json:"records"`
}

type StorageMeta struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type StroageNode struct {
	Value    string        `json:"value"`
	Name     string        `json:"name"`
	Children []StorageMeta `json:"children"`
}

type ThingDetailListRequest struct {
	TagName  string `json:"tag_name"`
	Provider string `json:"provider"`
	Bucket   string `json:"bucket"`
}

type ThingDetailListResponse struct {
	Records []AllImageDetail `json:"records"`
}

type ThingListData struct {
	Category string      `json:"category"` // 分类
	List     []ThingMeta `json:"list"`     // 图片列表
}

type ThingListRequest struct {
	Provider string `json:"provider"`
	Bucket   string `json:"bucket"`
}

type ThingListResponse struct {
	Records []ThingListData `json:"records"`
}

type ThingMeta struct {
	TagName    string `json:"tag_name"`
	CreatedAt  string `json:"created_at"`
	TagCount   int64  `json:"tag_count"`
	CoverImage string `json:"cover_image"`
}

type UploadRequest struct {
	Image       string `json:"image"`
	AccessToken string `json:"access_token"`
	UserId      string `json:"user_id"`
}

type WechatOffiaccountLoginRequest struct {
	Openid   string `json:"openid"`
	ClientId string `json:"client_id"`
}
