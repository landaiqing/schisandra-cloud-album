// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type AccountLoginRequest struct {
	Account   string `json:"account"`
	Password  string `json:"password"`
	AutoLogin bool   `json:"auto_login"`
	Angle     int64  `json:"angle"`
	Key       string `json:"key"`
}

type CommentContent struct {
	NickName        string   `json:"nickname"`
	Avatar          string   `json:"avatar"`
	Level           int64    `json:"level,omitempty" default:"0"`
	Id              int64    `json:"id"`
	UserId          string   `json:"user_id"`
	TopicId         string   `json:"topic_id"`
	Content         string   `json:"content"`
	ReplyTo         int64    `json:"reply_to,omitempty"`
	ReplyId         int64    `json:"reply_id,omitempty"`
	ReplyUser       string   `json:"reply_user,omitempty"`
	ReplyNickname   string   `json:"reply_nickname,omitempty"`
	IsAuthor        int64    `json:"is_author"`
	Likes           int64    `json:"likes"`
	ReplyCount      int64    `json:"reply_count"`
	CreatedTime     string   `json:"created_time"`
	Location        string   `json:"location"`
	Browser         string   `json:"browser"`
	OperatingSystem string   `json:"operating_system"`
	IsLiked         bool     `json:"is_liked" default:"false"`
	Images          []string `json:"images,omitempty"`
}

type CommentDisLikeRequest struct {
	TopicId   string `json:"topic_id"`
	CommentId int64  `json:"comment_id"`
}

type CommentLikeRequest struct {
	TopicId   string `json:"topic_id"`
	CommentId int64  `json:"comment_id"`
}

type CommentListPageResponse struct {
	Size     int              `json:"size"`
	Total    int64            `json:"total"`
	Current  int              `json:"current"`
	Comments []CommentContent `json:"comments"`
}

type CommentListRequest struct {
	TopicId string `json:"topic_id"`
	Page    int    `json:"page,default=1,optional"`
	Size    int    `json:"size,default=5,optional"`
	IsHot   bool   `json:"is_hot,default=true,optional"`
}

type CommentRequest struct {
	Content string   `json:"content"`
	Images  []string `json:"images,optional"`
	TopicId string   `json:"topic_id"`
	Author  string   `json:"author"`
	Key     string   `json:"key"`
	Point   []int64  `json:"point"`
}

type CommentResponse struct {
	Id              int64  `json:"id"`
	Content         string `json:"content"`
	UserId          string `json:"user_id"`
	TopicId         string `json:"topic_id"`
	Author          int64  `json:"author"`
	Location        string `json:"location"`
	Browser         string `json:"browser"`
	OperatingSystem string `json:"operating_system"`
	CreatedTime     string `json:"created_time"`
	ReplyId         int64  `json:"reply_id,omitempty"`
	ReplyUser       string `json:"reply_user,omitempty"`
	ReplyTo         int64  `json:"reply_to,omitempty"`
}

type LoginResponse struct {
	AccessToken string `json:"access_token"`
	ExpireAt    int64  `json:"expire_at"`
	UID         string `json:"uid"`
	Username    string `json:"username,omitempty"`
	Nickname    string `json:"nickname"`
	Avatar      string `json:"avatar"`
	Status      int64  `json:"status"`
}

type OAuthCallbackRequest struct {
	Code string `form:"code"`
}

type OAuthRequest struct {
	State string `form:"state"`
}

type OAuthWechatRequest struct {
	ClientId string `json:"client_id"`
}

type PhoneLoginRequest struct {
	Phone     string `json:"phone"`
	Captcha   string `json:"captcha"`
	AutoLogin bool   `json:"auto_login"`
}

type RefreshTokenResponse struct {
	AccessToken string `json:"access_token"`
	ExpireAt    int64  `json:"expire_at"`
}

type ReplyCommentRequest struct {
	Content   string   `json:"content"`
	Images    []string `json:"images,optional"`
	TopicId   string   `json:"topic_id" `
	ReplyId   int64    `json:"reply_id" `
	ReplyUser string   `json:"reply_user" `
	Author    string   `json:"author"`
	Key       string   `json:"key"`
	Point     []int64  `json:"point"`
}

type ReplyListRequest struct {
	TopicId   string `json:"topic_id"`
	CommentId int64  `json:"comment_id"`
	Page      int    `json:"page,default=1,optional"`
	Size      int    `json:"size,default=5,optional"`
}

type ReplyReplyRequest struct {
	Content   string   `json:"content"`
	Images    []string `json:"images,optional"`
	TopicId   string   `json:"topic_id"`
	ReplyTo   int64    `json:"reply_to"`
	ReplyId   int64    `json:"reply_id"`
	ReplyUser string   `json:"reply_user" `
	Author    string   `json:"author"`
	Key       string   `json:"key"`
	Point     []int64  `json:"point"`
}

type ResetPasswordRequest struct {
	Phone      string `json:"phone"`
	Captcha    string `json:"captcha"`
	Password   string `json:"password"`
	Repassword string `json:"repassword"`
}

type RotateCaptchaResponse struct {
	Key   string `json:"key"`
	Image string `json:"image"`
	Thumb string `json:"thumb"`
}

type SlideCaptchaResponse struct {
	Key         string `json:"key"`
	Image       string `json:"image"`
	Thumb       string `json:"thumb"`
	ThumbWidth  int64  `json:"thumb_width"`
	ThumbHeight int64  `json:"thumb_height"`
	ThumbX      int64  `json:"thumb_x"`
	ThumbY      int64  `json:"thumb_y"`
}

type SmsSendRequest struct {
	Phone string `json:"phone"`
	Angle int64  `json:"angle"`
	Key   string `json:"key"`
}

type StorageConfigRequest struct {
	Type      string `json:"type"`
	AccessKey string `json:"access_key"`
	SecretKey string `json:"secret_key"`
	Endpoint  string `json:"endpoint"`
	Bucket    string `json:"bucket"`
	Region    string `json:"region"`
}

type UploadRequest struct {
	Image       string `json:"image"`
	AccessToken string `json:"access_token"`
	UserId      string `json:"user_id"`
}

type WechatOffiaccountLoginRequest struct {
	Openid   string `json:"openid"`
	ClientId string `json:"client_id"`
}
