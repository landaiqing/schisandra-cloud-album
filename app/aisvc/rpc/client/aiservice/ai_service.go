// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: aisvc.proto

package aiservice

import (
	"context"

	"schisandra-album-cloud-microservices/app/aisvc/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FaceRecognitionRequest  = pb.FaceRecognitionRequest
	FaceRecognitionResponse = pb.FaceRecognitionResponse

	AiService interface {
		// FaceRecognition
		FaceRecognition(ctx context.Context, in *FaceRecognitionRequest, opts ...grpc.CallOption) (*FaceRecognitionResponse, error)
	}

	defaultAiService struct {
		cli zrpc.Client
	}
)

func NewAiService(cli zrpc.Client) AiService {
	return &defaultAiService{
		cli: cli,
	}
}

// FaceRecognition
func (m *defaultAiService) FaceRecognition(ctx context.Context, in *FaceRecognitionRequest, opts ...grpc.CallOption) (*FaceRecognitionResponse, error) {
	client := pb.NewAiServiceClient(m.cli.Conn())
	return client.FaceRecognition(ctx, in, opts...)
}
