// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type AccountLoginRequest struct {
	Account   string `json:"account"`
	Password  string `json:"password"`
	AutoLogin bool   `json:"auto_login"`
	Angle     int64  `json:"angle"`
	Key       string `json:"key"`
}

type CommentDisLikeRequest struct {
	TopicId   string `json:"topic_id"`
	CommentId int64  `json:"comment_id"`
}

type CommentLikeRequest struct {
	TopicId   string `json:"topic_id"`
	CommentId int64  `json:"comment_id"`
}

type CommentListRequest struct {
	TopicId string `json:"topic_id"`
	Page    int    `json:"page,default=1,optional"`
	Size    int    `json:"size,default=5,optional"`
	IsHot   bool   `json:"is_hot,default=true,optional"`
}

type CommentRequest struct {
	Content string   `json:"content"`
	Images  []string `json:"images,optional"`
	TopicId string   `json:"topic_id"`
	Author  string   `json:"author"`
	Key     string   `json:"key"`
	Point   []int64  `json:"point"`
}

type LoginResponse struct {
	AccessToken string `json:"access_token"`
	UID         string `json:"uid"`
	Username    string `json:"username,omitempty"`
	Nickname    string `json:"nickname"`
	Avatar      string `json:"avatar"`
	Status      int64  `json:"status"`
}

type OAuthCallbackRequest struct {
	Code string `form:"code"`
}

type OAuthRequest struct {
	State string `form:"state"`
}

type OAuthWechatRequest struct {
	Client_id string `form:"client_id"`
}

type PhoneLoginRequest struct {
	Phone     string `json:"phone"`
	Captcha   string `json:"captcha"`
	AutoLogin bool   `json:"auto_login"`
}

type ReplyCommentRequest struct {
	Content   string   `json:"content"`
	Images    []string `json:"images,optional"`
	TopicId   string   `json:"topic_id" `
	ReplyId   int64    `json:"reply_id" `
	ReplyUser string   `json:"reply_user" `
	Author    string   `json:"author"`
	Key       string   `json:"key"`
	Point     []int64  `json:"point"`
}

type ReplyListRequest struct {
	TopicId   string `json:"topic_id"`
	CommentId int64  `json:"comment_id"`
	Page      int    `json:"page,default=1,optional"`
	Size      int    `json:"size,default=5,optional"`
}

type ReplyReplyRequest struct {
	Content   string   `json:"content"`
	Images    []string `json:"images,optional"`
	TopicId   string   `json:"topic_id"`
	ReplyTo   int64    `json:"reply_to"`
	ReplyId   int64    `json:"reply_id"`
	ReplyUser string   `json:"reply_user" `
	Author    string   `json:"author"`
	Key       string   `json:"key"`
	Point     []int64  `json:"point"`
}

type ResetPasswordRequest struct {
	Phone      string `json:"phone"`
	Captcha    string `json:"captcha"`
	Password   string `json:"password"`
	Repassword string `json:"repassword"`
}

type Response struct {
	Code    int64       `json:"code"`
	Message string      `json:"message"`
	Data    interface{} `json:"data,optional"`
}

type SmsSendRequest struct {
	Phone string `json:"phone"`
	Angle int64  `json:"angle"`
	Key   string `json:"key"`
}

type UploadRequest struct {
	Image       string `json:"image"`
	AccessToken string `json:"access_token"`
	UserId      string `json:"user_id"`
}

type WechatOffiaccountLoginRequest struct {
	Openid   string `json:"openid"`
	ClientId string `json:"client_id"`
}
