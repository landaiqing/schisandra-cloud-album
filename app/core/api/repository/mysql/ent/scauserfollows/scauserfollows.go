// Code generated by ent, DO NOT EDIT.

package scauserfollows

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the scauserfollows type in the database.
	Label = "sca_user_follows"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFollowerID holds the string denoting the follower_id field in the database.
	FieldFollowerID = "follower_id"
	// FieldFolloweeID holds the string denoting the followee_id field in the database.
	FieldFolloweeID = "followee_id"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// Table holds the table name of the scauserfollows in the database.
	Table = "sca_user_follows"
)

// Columns holds all SQL columns for scauserfollows fields.
var Columns = []string{
	FieldID,
	FieldFollowerID,
	FieldFolloweeID,
	FieldStatus,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus uint8
)

// OrderOption defines the ordering options for the ScaUserFollows queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByFollowerID orders the results by the follower_id field.
func ByFollowerID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFollowerID, opts...).ToFunc()
}

// ByFolloweeID orders the results by the followee_id field.
func ByFolloweeID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFolloweeID, opts...).ToFunc()
}

// ByStatus orders the results by the status field.
func ByStatus(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStatus, opts...).ToFunc()
}
