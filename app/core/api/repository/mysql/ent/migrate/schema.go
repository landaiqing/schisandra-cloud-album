// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ScaAuthPermissionRuleColumns holds the columns for the "sca_auth_permission_rule" table.
	ScaAuthPermissionRuleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "ptype", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "v0", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "v1", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "v2", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "v3", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "v4", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "v5", Type: field.TypeString, Nullable: true, Size: 100},
	}
	// ScaAuthPermissionRuleTable holds the schema information for the "sca_auth_permission_rule" table.
	ScaAuthPermissionRuleTable = &schema.Table{
		Name:       "sca_auth_permission_rule",
		Comment:    "角色权限规则表",
		Columns:    ScaAuthPermissionRuleColumns,
		PrimaryKey: []*schema.Column{ScaAuthPermissionRuleColumns[0]},
	}
	// ScaAuthRoleColumns holds the columns for the "sca_auth_role" table.
	ScaAuthRoleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "主键ID", SchemaType: map[string]string{"mysql": "bigint(20)"}},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "deleted", Type: field.TypeInt8, Comment: "是否删除 0 未删除 1 已删除", Default: 0},
		{Name: "role_name", Type: field.TypeString, Size: 32, Comment: "角色名称"},
		{Name: "role_key", Type: field.TypeString, Size: 64, Comment: "角色关键字"},
	}
	// ScaAuthRoleTable holds the schema information for the "sca_auth_role" table.
	ScaAuthRoleTable = &schema.Table{
		Name:       "sca_auth_role",
		Comment:    "角色表",
		Columns:    ScaAuthRoleColumns,
		PrimaryKey: []*schema.Column{ScaAuthRoleColumns[0]},
	}
	// ScaAuthUserColumns holds the columns for the "sca_auth_user" table.
	ScaAuthUserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "自增ID", SchemaType: map[string]string{"mysql": "bigint(20)"}},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "deleted", Type: field.TypeInt8, Comment: "是否删除 0 未删除 1 已删除", Default: 0},
		{Name: "uid", Type: field.TypeString, Unique: true, Size: 20, Comment: "唯一ID"},
		{Name: "username", Type: field.TypeString, Nullable: true, Size: 32, Comment: "用户名"},
		{Name: "nickname", Type: field.TypeString, Nullable: true, Size: 32, Comment: "昵称"},
		{Name: "email", Type: field.TypeString, Nullable: true, Size: 32, Comment: "邮箱"},
		{Name: "phone", Type: field.TypeString, Nullable: true, Size: 32, Comment: "电话"},
		{Name: "password", Type: field.TypeString, Nullable: true, Size: 64, Comment: "密码"},
		{Name: "gender", Type: field.TypeInt8, Nullable: true, Comment: "性别"},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "头像"},
		{Name: "status", Type: field.TypeInt8, Nullable: true, Comment: "状态 0 正常 1 封禁", Default: 0},
		{Name: "introduce", Type: field.TypeString, Nullable: true, Size: 255, Comment: "介绍"},
		{Name: "blog", Type: field.TypeString, Nullable: true, Size: 30, Comment: "博客"},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 50, Comment: "地址"},
		{Name: "company", Type: field.TypeString, Nullable: true, Size: 50, Comment: "公司"},
	}
	// ScaAuthUserTable holds the schema information for the "sca_auth_user" table.
	ScaAuthUserTable = &schema.Table{
		Name:       "sca_auth_user",
		Comment:    "用户表",
		Columns:    ScaAuthUserColumns,
		PrimaryKey: []*schema.Column{ScaAuthUserColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "scaauthuser_id",
				Unique:  true,
				Columns: []*schema.Column{ScaAuthUserColumns[0]},
			},
			{
				Name:    "scaauthuser_uid",
				Unique:  true,
				Columns: []*schema.Column{ScaAuthUserColumns[4]},
			},
			{
				Name:    "scaauthuser_phone",
				Unique:  true,
				Columns: []*schema.Column{ScaAuthUserColumns[8]},
			},
		},
	}
	// ScaAuthUserDeviceColumns holds the columns for the "sca_auth_user_device" table.
	ScaAuthUserDeviceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "主键ID", SchemaType: map[string]string{"mysql": "bigint(20)"}},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "deleted", Type: field.TypeInt8, Comment: "是否删除 0 未删除 1 已删除", Default: 0},
		{Name: "user_id", Type: field.TypeString, Size: 20, Comment: "用户ID"},
		{Name: "ip", Type: field.TypeString, Size: 20, Comment: "登录IP"},
		{Name: "location", Type: field.TypeString, Size: 20, Comment: "地址"},
		{Name: "agent", Type: field.TypeString, Size: 255, Comment: "设备信息"},
		{Name: "browser", Type: field.TypeString, Size: 20, Comment: "浏览器"},
		{Name: "operating_system", Type: field.TypeString, Size: 20, Comment: "操作系统"},
		{Name: "browser_version", Type: field.TypeString, Size: 20, Comment: "浏览器版本"},
		{Name: "mobile", Type: field.TypeBool, Comment: "是否为手机 0否1是"},
		{Name: "bot", Type: field.TypeBool, Comment: "是否为bot 0否1是"},
		{Name: "mozilla", Type: field.TypeString, Size: 10, Comment: "火狐版本"},
		{Name: "platform", Type: field.TypeString, Size: 20, Comment: "平台"},
		{Name: "engine_name", Type: field.TypeString, Size: 20, Comment: "引擎名称"},
		{Name: "engine_version", Type: field.TypeString, Size: 20, Comment: "引擎版本"},
	}
	// ScaAuthUserDeviceTable holds the schema information for the "sca_auth_user_device" table.
	ScaAuthUserDeviceTable = &schema.Table{
		Name:       "sca_auth_user_device",
		Comment:    "用户设备表",
		Columns:    ScaAuthUserDeviceColumns,
		PrimaryKey: []*schema.Column{ScaAuthUserDeviceColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "scaauthuserdevice_id",
				Unique:  true,
				Columns: []*schema.Column{ScaAuthUserDeviceColumns[0]},
			},
		},
	}
	// ScaAuthUserSocialColumns holds the columns for the "sca_auth_user_social" table.
	ScaAuthUserSocialColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "主键ID", SchemaType: map[string]string{"mysql": "bigint(20)"}},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "deleted", Type: field.TypeInt8, Comment: "是否删除 0 未删除 1 已删除", Default: 0},
		{Name: "user_id", Type: field.TypeString, Size: 20, Comment: "用户ID"},
		{Name: "open_id", Type: field.TypeString, Size: 50, Comment: "第三方用户的 open id"},
		{Name: "source", Type: field.TypeString, Size: 10, Comment: "第三方用户来源"},
		{Name: "status", Type: field.TypeInt, Comment: "状态 0正常 1 封禁", Default: 0},
	}
	// ScaAuthUserSocialTable holds the schema information for the "sca_auth_user_social" table.
	ScaAuthUserSocialTable = &schema.Table{
		Name:       "sca_auth_user_social",
		Comment:    "用户第三方登录信息",
		Columns:    ScaAuthUserSocialColumns,
		PrimaryKey: []*schema.Column{ScaAuthUserSocialColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "scaauthusersocial_id",
				Unique:  true,
				Columns: []*schema.Column{ScaAuthUserSocialColumns[0]},
			},
			{
				Name:    "scaauthusersocial_user_id",
				Unique:  true,
				Columns: []*schema.Column{ScaAuthUserSocialColumns[4]},
			},
			{
				Name:    "scaauthusersocial_open_id",
				Unique:  true,
				Columns: []*schema.Column{ScaAuthUserSocialColumns[5]},
			},
		},
	}
	// ScaCommentLikesColumns holds the columns for the "sca_comment_likes" table.
	ScaCommentLikesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "主键id"},
		{Name: "topic_id", Type: field.TypeString, Comment: "话题ID"},
		{Name: "user_id", Type: field.TypeString, Comment: "用户ID"},
		{Name: "comment_id", Type: field.TypeInt64, Comment: "评论ID"},
		{Name: "like_time", Type: field.TypeTime, Comment: "点赞时间"},
	}
	// ScaCommentLikesTable holds the schema information for the "sca_comment_likes" table.
	ScaCommentLikesTable = &schema.Table{
		Name:       "sca_comment_likes",
		Comment:    "评论点赞表",
		Columns:    ScaCommentLikesColumns,
		PrimaryKey: []*schema.Column{ScaCommentLikesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "scacommentlikes_user_id",
				Unique:  false,
				Columns: []*schema.Column{ScaCommentLikesColumns[2]},
			},
			{
				Name:    "scacommentlikes_comment_id",
				Unique:  false,
				Columns: []*schema.Column{ScaCommentLikesColumns[3]},
			},
		},
	}
	// ScaCommentMessageColumns holds the columns for the "sca_comment_message" table.
	ScaCommentMessageColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "主键"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "deleted", Type: field.TypeInt8, Comment: "是否删除 0 未删除 1 已删除", Default: 0},
		{Name: "topic_id", Type: field.TypeString, Comment: "话题Id"},
		{Name: "from_id", Type: field.TypeString, Comment: "来自人"},
		{Name: "to_id", Type: field.TypeString, Comment: "送达人"},
		{Name: "content", Type: field.TypeString, Comment: "消息内容"},
		{Name: "is_read", Type: field.TypeInt, Nullable: true, Comment: "是否已读"},
	}
	// ScaCommentMessageTable holds the schema information for the "sca_comment_message" table.
	ScaCommentMessageTable = &schema.Table{
		Name:       "sca_comment_message",
		Comment:    "评论消息表",
		Columns:    ScaCommentMessageColumns,
		PrimaryKey: []*schema.Column{ScaCommentMessageColumns[0]},
	}
	// ScaCommentReplyColumns holds the columns for the "sca_comment_reply" table.
	ScaCommentReplyColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "主键id", SchemaType: map[string]string{"mysql": "bigint(20)"}},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "更新时间"},
		{Name: "deleted", Type: field.TypeInt8, Comment: "是否删除 0 未删除 1 已删除", Default: 0},
		{Name: "user_id", Type: field.TypeString, Comment: "评论用户id"},
		{Name: "topic_id", Type: field.TypeString, Comment: "评论话题id"},
		{Name: "topic_type", Type: field.TypeInt, Comment: "话题类型"},
		{Name: "content", Type: field.TypeString, Comment: "评论内容"},
		{Name: "comment_type", Type: field.TypeInt, Comment: "评论类型 0评论 1 回复"},
		{Name: "reply_to", Type: field.TypeInt64, Nullable: true, Comment: "回复子评论ID", SchemaType: map[string]string{"mysql": "bigint(20)"}},
		{Name: "reply_id", Type: field.TypeInt64, Nullable: true, Comment: "回复父评论Id", SchemaType: map[string]string{"mysql": "bigint(20)"}},
		{Name: "reply_user", Type: field.TypeString, Nullable: true, Comment: "回复人id"},
		{Name: "author", Type: field.TypeInt, Comment: "评论回复是否作者  0否 1是", Default: 0},
		{Name: "likes", Type: field.TypeInt64, Nullable: true, Comment: "点赞数", Default: 0, SchemaType: map[string]string{"mysql": "bigint(20)"}},
		{Name: "reply_count", Type: field.TypeInt64, Nullable: true, Comment: "回复数量", Default: 0, SchemaType: map[string]string{"mysql": "bigint(20)"}},
		{Name: "browser", Type: field.TypeString, Comment: "浏览器"},
		{Name: "operating_system", Type: field.TypeString, Comment: "操作系统"},
		{Name: "comment_ip", Type: field.TypeString, Comment: "IP地址"},
		{Name: "location", Type: field.TypeString, Comment: "地址"},
		{Name: "agent", Type: field.TypeString, Size: 255, Comment: "设备信息"},
	}
	// ScaCommentReplyTable holds the schema information for the "sca_comment_reply" table.
	ScaCommentReplyTable = &schema.Table{
		Name:       "sca_comment_reply",
		Comment:    "评论回复表",
		Columns:    ScaCommentReplyColumns,
		PrimaryKey: []*schema.Column{ScaCommentReplyColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "scacommentreply_id",
				Unique:  true,
				Columns: []*schema.Column{ScaCommentReplyColumns[0]},
			},
		},
	}
	// ScaUserFollowsColumns holds the columns for the "sca_user_follows" table.
	ScaUserFollowsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "follower_id", Type: field.TypeString, Comment: "关注者"},
		{Name: "followee_id", Type: field.TypeString, Comment: "被关注者"},
		{Name: "status", Type: field.TypeUint8, Comment: "关注状态（0 未互关 1 互关）", Default: 0},
	}
	// ScaUserFollowsTable holds the schema information for the "sca_user_follows" table.
	ScaUserFollowsTable = &schema.Table{
		Name:       "sca_user_follows",
		Comment:    "用户关注表",
		Columns:    ScaUserFollowsColumns,
		PrimaryKey: []*schema.Column{ScaUserFollowsColumns[0]},
	}
	// ScaUserLevelColumns holds the columns for the "sca_user_level" table.
	ScaUserLevelColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "主键"},
		{Name: "user_id", Type: field.TypeString, Comment: "用户Id"},
		{Name: "level_type", Type: field.TypeUint8, Comment: "等级类型"},
		{Name: "level", Type: field.TypeInt, Comment: "等级"},
		{Name: "level_name", Type: field.TypeString, Size: 50, Comment: "等级名称"},
		{Name: "exp_start", Type: field.TypeInt64, Comment: "开始经验值"},
		{Name: "exp_end", Type: field.TypeInt64, Comment: "结束经验值"},
		{Name: "level_description", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "等级描述"},
	}
	// ScaUserLevelTable holds the schema information for the "sca_user_level" table.
	ScaUserLevelTable = &schema.Table{
		Name:       "sca_user_level",
		Comment:    "用户等级表",
		Columns:    ScaUserLevelColumns,
		PrimaryKey: []*schema.Column{ScaUserLevelColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ScaAuthPermissionRuleTable,
		ScaAuthRoleTable,
		ScaAuthUserTable,
		ScaAuthUserDeviceTable,
		ScaAuthUserSocialTable,
		ScaCommentLikesTable,
		ScaCommentMessageTable,
		ScaCommentReplyTable,
		ScaUserFollowsTable,
		ScaUserLevelTable,
	}
)

func init() {
	ScaAuthPermissionRuleTable.Annotation = &entsql.Annotation{
		Table: "sca_auth_permission_rule",
	}
	ScaAuthRoleTable.Annotation = &entsql.Annotation{
		Table: "sca_auth_role",
	}
	ScaAuthUserTable.Annotation = &entsql.Annotation{
		Table: "sca_auth_user",
	}
	ScaAuthUserDeviceTable.Annotation = &entsql.Annotation{
		Table: "sca_auth_user_device",
	}
	ScaAuthUserSocialTable.Annotation = &entsql.Annotation{
		Table: "sca_auth_user_social",
	}
	ScaCommentLikesTable.Annotation = &entsql.Annotation{
		Table: "sca_comment_likes",
	}
	ScaCommentMessageTable.Annotation = &entsql.Annotation{
		Table: "sca_comment_message",
	}
	ScaCommentReplyTable.Annotation = &entsql.Annotation{
		Table: "sca_comment_reply",
	}
	ScaUserFollowsTable.Annotation = &entsql.Annotation{
		Table: "sca_user_follows",
	}
	ScaUserLevelTable.Annotation = &entsql.Annotation{
		Table: "sca_user_level",
	}
}
