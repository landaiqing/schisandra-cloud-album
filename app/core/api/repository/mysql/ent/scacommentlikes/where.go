// Code generated by ent, DO NOT EDIT.

package scacommentlikes

import (
	"schisandra-album-cloud-microservices/app/core/api/repository/mysql/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldLTE(FieldID, id))
}

// TopicID applies equality check predicate on the "topic_id" field. It's identical to TopicIDEQ.
func TopicID(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldEQ(FieldTopicID, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldEQ(FieldUserID, v))
}

// CommentID applies equality check predicate on the "comment_id" field. It's identical to CommentIDEQ.
func CommentID(v int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldEQ(FieldCommentID, v))
}

// LikeTime applies equality check predicate on the "like_time" field. It's identical to LikeTimeEQ.
func LikeTime(v time.Time) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldEQ(FieldLikeTime, v))
}

// TopicIDEQ applies the EQ predicate on the "topic_id" field.
func TopicIDEQ(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldEQ(FieldTopicID, v))
}

// TopicIDNEQ applies the NEQ predicate on the "topic_id" field.
func TopicIDNEQ(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldNEQ(FieldTopicID, v))
}

// TopicIDIn applies the In predicate on the "topic_id" field.
func TopicIDIn(vs ...string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldIn(FieldTopicID, vs...))
}

// TopicIDNotIn applies the NotIn predicate on the "topic_id" field.
func TopicIDNotIn(vs ...string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldNotIn(FieldTopicID, vs...))
}

// TopicIDGT applies the GT predicate on the "topic_id" field.
func TopicIDGT(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldGT(FieldTopicID, v))
}

// TopicIDGTE applies the GTE predicate on the "topic_id" field.
func TopicIDGTE(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldGTE(FieldTopicID, v))
}

// TopicIDLT applies the LT predicate on the "topic_id" field.
func TopicIDLT(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldLT(FieldTopicID, v))
}

// TopicIDLTE applies the LTE predicate on the "topic_id" field.
func TopicIDLTE(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldLTE(FieldTopicID, v))
}

// TopicIDContains applies the Contains predicate on the "topic_id" field.
func TopicIDContains(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldContains(FieldTopicID, v))
}

// TopicIDHasPrefix applies the HasPrefix predicate on the "topic_id" field.
func TopicIDHasPrefix(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldHasPrefix(FieldTopicID, v))
}

// TopicIDHasSuffix applies the HasSuffix predicate on the "topic_id" field.
func TopicIDHasSuffix(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldHasSuffix(FieldTopicID, v))
}

// TopicIDEqualFold applies the EqualFold predicate on the "topic_id" field.
func TopicIDEqualFold(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldEqualFold(FieldTopicID, v))
}

// TopicIDContainsFold applies the ContainsFold predicate on the "topic_id" field.
func TopicIDContainsFold(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldContainsFold(FieldTopicID, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldLTE(FieldUserID, v))
}

// UserIDContains applies the Contains predicate on the "user_id" field.
func UserIDContains(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldContains(FieldUserID, v))
}

// UserIDHasPrefix applies the HasPrefix predicate on the "user_id" field.
func UserIDHasPrefix(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldHasPrefix(FieldUserID, v))
}

// UserIDHasSuffix applies the HasSuffix predicate on the "user_id" field.
func UserIDHasSuffix(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldHasSuffix(FieldUserID, v))
}

// UserIDEqualFold applies the EqualFold predicate on the "user_id" field.
func UserIDEqualFold(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldEqualFold(FieldUserID, v))
}

// UserIDContainsFold applies the ContainsFold predicate on the "user_id" field.
func UserIDContainsFold(v string) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldContainsFold(FieldUserID, v))
}

// CommentIDEQ applies the EQ predicate on the "comment_id" field.
func CommentIDEQ(v int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldEQ(FieldCommentID, v))
}

// CommentIDNEQ applies the NEQ predicate on the "comment_id" field.
func CommentIDNEQ(v int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldNEQ(FieldCommentID, v))
}

// CommentIDIn applies the In predicate on the "comment_id" field.
func CommentIDIn(vs ...int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldIn(FieldCommentID, vs...))
}

// CommentIDNotIn applies the NotIn predicate on the "comment_id" field.
func CommentIDNotIn(vs ...int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldNotIn(FieldCommentID, vs...))
}

// CommentIDGT applies the GT predicate on the "comment_id" field.
func CommentIDGT(v int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldGT(FieldCommentID, v))
}

// CommentIDGTE applies the GTE predicate on the "comment_id" field.
func CommentIDGTE(v int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldGTE(FieldCommentID, v))
}

// CommentIDLT applies the LT predicate on the "comment_id" field.
func CommentIDLT(v int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldLT(FieldCommentID, v))
}

// CommentIDLTE applies the LTE predicate on the "comment_id" field.
func CommentIDLTE(v int64) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldLTE(FieldCommentID, v))
}

// LikeTimeEQ applies the EQ predicate on the "like_time" field.
func LikeTimeEQ(v time.Time) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldEQ(FieldLikeTime, v))
}

// LikeTimeNEQ applies the NEQ predicate on the "like_time" field.
func LikeTimeNEQ(v time.Time) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldNEQ(FieldLikeTime, v))
}

// LikeTimeIn applies the In predicate on the "like_time" field.
func LikeTimeIn(vs ...time.Time) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldIn(FieldLikeTime, vs...))
}

// LikeTimeNotIn applies the NotIn predicate on the "like_time" field.
func LikeTimeNotIn(vs ...time.Time) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldNotIn(FieldLikeTime, vs...))
}

// LikeTimeGT applies the GT predicate on the "like_time" field.
func LikeTimeGT(v time.Time) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldGT(FieldLikeTime, v))
}

// LikeTimeGTE applies the GTE predicate on the "like_time" field.
func LikeTimeGTE(v time.Time) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldGTE(FieldLikeTime, v))
}

// LikeTimeLT applies the LT predicate on the "like_time" field.
func LikeTimeLT(v time.Time) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldLT(FieldLikeTime, v))
}

// LikeTimeLTE applies the LTE predicate on the "like_time" field.
func LikeTimeLTE(v time.Time) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.FieldLTE(FieldLikeTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ScaCommentLikes) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ScaCommentLikes) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ScaCommentLikes) predicate.ScaCommentLikes {
	return predicate.ScaCommentLikes(sql.NotPredicates(p))
}
