// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package handler

import (
	"net/http"
	"time"

	comment "schisandra-album-cloud-microservices/app/community/api/internal/handler/comment"
	"schisandra-album-cloud-microservices/app/community/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.SecurityHeadersMiddleware, serverCtx.CasbinVerifyMiddleware, serverCtx.AuthorizationMiddleware, serverCtx.NonceMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/dislike",
					Handler: comment.DislikeCommentHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/like",
					Handler: comment.LikeCommentHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/list",
					Handler: comment.GetCommentListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/reply/list",
					Handler: comment.GetReplyListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/reply/reply/submit",
					Handler: comment.SubmitReplyReplyHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/reply/submit",
					Handler: comment.SubmitReplyCommentHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/submit",
					Handler: comment.SubmitCommentHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/auth/comment"),
		rest.WithTimeout(10000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)
}
